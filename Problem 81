import numpy as np

# read the matrix from the file
matrix = np.loadtxt("p081_matrix.txt", delimiter=",")

# initialize the first row and column of the path sum matrix
path_sum = np.zeros_like(matrix)
path_sum[0, :] = np.cumsum(matrix[0, :])
path_sum[:, 0] = np.cumsum(matrix[:, 0])

# calculate the minimal path sum for each cell in the matrix
for i in range(1, matrix.shape[0]):
    for j in range(1, matrix.shape[1]):
        path_sum[i, j] = matrix[i, j] + min(path_sum[i-1, j], path_sum[i, j-1])

# the result is the minimal path sum for the bottom right corner
result = int(path_sum[-1, -1])
print(result)
